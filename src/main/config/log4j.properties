### 日志级别 ###
#log4j.rootLogger = fatal, CONSOLE
#log4j.rootLogger = error, CONSOLE
#log4j.rootLogger = warn, CONSOLE
#log4j.rootLogger = info, CONSOLE
log4j.rootLogger = debug, CONSOLE, FILE
 
### 配置项 ###

### 输出目的地 ###
#控制台
log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
#文件
#log4j.appender.A = org.apache.log4j.FileAppender
#每天产生一个日志文件
log4j.appender.FILE = org.apache.log4j.DailyRollingFileAppender
#文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.C = org.apache.log4j.RollingFileAppender
#将日志信息以流格式发送到任意指定的地方
#log4j.appender.D = org.apache.log4j.WriterAppender

log4j.appender.CONSOLE.Target = System.out

log4j.appender.FILE.File = logs/log.log
log4j.appender.FILE.Append = true

### 日志输出格式 ###
#以HTML表格形式布局
#log4j.appender.CONSOLE.layout = org.apache.log4j.HTMLLayout
#可以灵活地指定布局模式
log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
log4j.appender.FILE.layout = org.apache.log4j.PatternLayout
#包含日志信息的级别和信息字符串
#log4j.appender.CONSOLE.layout = org.apache.log4j.SimpleLayout
#包含日志产生的时间、线程、类别等等信息
#log4j.appender.CONSOLE.layout = org.apache.log4j.TTCCLayout

log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [ %p ] %m%n
log4j.appender.FILE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [ %p ] %m%n